pipeline {
    agent any

    environment {
        NODEJS_HOME = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
        GIT_CREDENTIALS = 'MyGitHubCreds'  // Your Git credentials ID
        TOMCAT_CREDENTIALS = 'tomcatcredentialshub'  // Your Tomcat credentials ID
        TOMCAT_URL = 'http://localhost:9090/manager/text'  // Tomcat Manager URL
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/khadeerun/PlaywrightContactApp.git', branch: 'main', credentialsId: "${env.GIT_CREDENTIALS}"
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
                bat 'npx playwright install'
            }
        }

        stage('Run Playwright Test') {
            steps {
                bat 'npx playwright test'
            }
        }

         stages {
        stage('Build') {
            steps {
                script {
                    bat 'jar -cvf C:\\Users\\KHADEERUN\\.jenkins\\workspace\\DeployTomcat\\myapp.war -C dist/ .'
                }
            }
        }
       
        stage('Package') {
            steps {
                script {
                    def buildDir = 'dist/'
                    if (fileExists(buildDir)) {
                        bat "jar -cvf ${env.WORKSPACE}\\myapp.war -C ${buildDir} ."
                    } else {
                        error "Build directory '${buildDir}' does not exist"
                    }
                }
            }
        }

         stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'tomcatcredentialshub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    script {
                        bat """
                        curl --upload-file C:\\Users\\KHADEERUN\\.jenkins\\workspace\\DeployTomcat\\myapp.war \
                        --user $USERNAME:$PASSWORD \
                        http://<your-tomcat-server>:8080/manager/text/deploy?path=/myapp&update=true
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/myapp.war', allowEmptyArchive: true
            junit '**/test-results/*.xml'
        }
    }
}
