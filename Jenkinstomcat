pipeline {
    agent any

    environment {
        NODEJS_HOME = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
        GIT_CREDENTIALS = 'MyGitHubCreds'
        TOMCAT_CREDENTIALS = 'tomcatcredentialshub'
        TOMCAT_URL = 'http://localhost:9090/manager/text'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/khadeerun/PlaywrightContactApp.git', branch: 'main', credentialsId: "${env.GIT_CREDENTIALS}"
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
                bat 'npx playwright install'
            }
        }

        stage('Run Playwright Test') {
            steps {
                bat 'npx playwright test --headed'
            }
        }

        stage('Build') {
            steps {
                script {
                    def npmHome = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${npmHome}/bin:${env.PATH}"
                }
                bat 'npm run build'
            }
        }

        stage('Package') {
            steps {
                script {
                    def buildDir = 'dist/'
                    if (fileExists(buildDir)) {
                        bat "jar -cvf C:\\Users\\KHADEERUN\\Downloads\\myapp.war -C ${buildDir} ."
                    } else {
                        error "Build directory '${buildDir}' does not exist"
                    }
                }
            }
        }

        stage('Verify WAR File') {
            steps {
                script {
                    bat 'dir C:\\Users\\KHADEERUN\\Downloads'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    def warFile = 'C:\\Users\\KHADEERUN\\Downloads\\myapp.war'
                    def contextPath = 'myapp'

                    deploy adapters: [tomcat9(
                        credentialsId: "${env.TOMCAT_CREDENTIALS}",
                        url: "${env.TOMCAT_URL}",
                        path: ""
                    )], contextPath: "${contextPath}", war: "${warFile}"
                }
            }
        }
    }

    post {
        always {
            junit 'playwright-report.xml'
            archiveArtifacts artifacts: 'C:\\Users\\KHADEERUN\\Downloads\\myapp.war', allowEmptyArchive: true
        }
    }
}

