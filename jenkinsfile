pipeline {
    agent any

    environment {
        LOCAL_DIR = 'C:\Users\KHADEERUN\.jenkins\workspace\DemoJob' // Set your local directory path here
    }

    stages {
        stage('Cleanup') {
            steps {
                script {
                    def dirPath = "D:\\SampleProject"
                    if (fileExists(dirPath)) {
                        deleteDir()
                    }
                }
            }
        }
        stage('Checkout') {
            steps {
                git url: 'https://github.com/khadeerun/PlaywrightContactApp.git', branch: 'main', credentialsId: 'MyGitHubCreds'
            }
        }
        /*stage('Create Local Directory') {
    steps {
        powershell '''
        $destDir = "D:\\SampleProject"
        
        # Create destination directory if it doesn't exist
        if (-Not (Test-Path -Path $destDir)) {
            New-Item -ItemType Directory -Force -Path $destDir
        }
        '''
    }
}

        stage('Install Dependencies') {
            steps {
                dir('D:\\SampleProject') {
                    bat 'npm install'
bat 'npm playwright install'
bat 'npx playwright test'
                }
            }
        }*/
        stage('Copy Files to Local Directory') {
            steps {
                powershell '''
                $srcDir = "C:\Users\KHADEERUN\.jenkins\workspace\DemoJob"
                $destDir = "D:\\SampleProject"
                
                # Copy files from workspace to local directory
                Copy-Item -Path "C:\Users\KHADEERUN\.jenkins\workspace\DemoJob" -Destination $destDir -Recurse -Force
                '''
            }
        }
stage('Install Dependencies') {
            steps {
                dir('SampleProject') {
                    bat 'npm install'
                    bat 'npx playwright install'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    dir("D:\\SampleProject") {
                        bat 'dir'  // List files to ensure they are copied
                        bat 'npx playwright test' // Run Playwright tests
                    }
                }
            }
        }
    }
}









/*pipeline {
    agent any

    environment {
        LOCAL_DIR = 'D:/LocalProject' // Set your local directory path here
    }

    stages {
        stage('Cleanup') {
            steps {
                script {
                    def dirPath = "${WORKSPACE}/PlaywrightContactApp"
                    if (fileExists(dirPath)) {
                        deleteDir()
                    }
                }
            }
        }
        stage('Checkout') {
            steps {
                git url: 'https://github.com/khadeerun/PlaywrightContactApp.git', branch: 'main', credentialsId: 'MyGitHubCreds'
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('PlaywrightContactApp') {
                    bat 'npm install'
                }
            }
        }
        stage('Copy Files to Local Directory') {
            steps {
                script {
                    def srcDir = "${WORKSPACE}/PlaywrightContactApp"
                    def destDir = "${env.LOCAL_DIR}"
                    
                    // Create destination directory if it doesn't exist
                   // new File(destDir).mkdirs()
                    
                    // Copy files from workspace to local directory
                    bat "cp -r ${C:\Users\KHADEERUN\.jenkins\workspace\DemoJob}/* ${SampleProject}/"
                }
            }
        }
        stage('Run Tests') {
            steps {
                dir('PlaywrightContactApp') {
                    bat 'npx playwright test'
                }
            }
        }


       stage('Build') {
            steps {
                // Install dependencies and build the project
                script {
                    def npmHome = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${npmHome}/bin:${env.PATH}"
                }
                bat 'npm install'
                bat 'npm run build'


            }
        }

        stage('Deploy') {
            steps {
                // Deploy the project
                bat '''
                echo "Deploying the project..."
                xcopy .\\dist\\* \\path\\to\\deployment\\directory /E /I
                '''
            }
        }
    }
}










pipeline {
    agent any

    environment {
        NODEJS_HOME = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation' // Ensure this matches the name you provided in Jenkins Node.js configuration
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Correct Git repository URL
                git url: 'https://github.com/khadeerun/PlaywrightContactApp.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install project dependencies
                bat 'npm install'
                bat 'npx playwright install'
                
            }
        }

        stage('Test') {
            steps {
                // Run tests
                    //bat 'export DISPLAY=:99'
                    //bat 'Xvfb :99 -screen 0 1280x1024x24 &'
        bat 'npx playwright test'
            }
        }

       stage('Build') {
            steps {
                // Install dependencies and build the project
                script {
                    def npmHome = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${npmHome}/bin:${env.PATH}"
                }
                bat 'npm install'
                bat 'npm run build'


            }
        }

        stage('Deploy') {
            steps {
                // Deploy the project
                bat '''
                echo "Deploying the project..."
                xcopy .\\dist\\* \\path\\to\\deployment\\directory /E /I
                '''
            }
        }
    }

    post {
        always {
            // Clean up the workspace
            cleanWs()
        }
        success {
            // Notify success
            echo 'Build and deployment successful!'
        }
        failure {
            // Notify failure
            echo 'Build or deployment failed!'
        }
    }
}*/
